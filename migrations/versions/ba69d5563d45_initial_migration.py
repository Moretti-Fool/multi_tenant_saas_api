"""initial migration

Revision ID: ba69d5563d45
Revises: 69d73a455a8d
Create Date: 2025-03-09 16:40:34.301371

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ba69d5563d45'
down_revision: Union[str, None] = '69d73a455a8d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_superadmin', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_admins_email'), 'admins', ['email'], unique=True, schema='public')
    op.create_index(op.f('ix_public_admins_id'), 'admins', ['id'], unique=False, schema='public')
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('schema_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('schema_name'),
    schema='public'
    )
    op.create_index(op.f('ix_public_tenants_id'), 'tenants', ['id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_tenants_name'), 'tenants', ['name'], unique=True, schema='public')
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='tenant'
    )
    op.create_index(op.f('ix_tenant_roles_id'), 'roles', ['id'], unique=False, schema='tenant')
    op.create_index(op.f('ix_tenant_roles_name'), 'roles', ['name'], unique=True, schema='tenant')
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['public.tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('user_verifications',
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_used', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['public.tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('token'),
    schema='public'
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('verification_token', sa.String(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['tenant.roles.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tenant_id'], ['public.tenants.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('verification_token'),
    schema='tenant'
    )
    op.create_index(op.f('ix_tenant_users_email'), 'users', ['email'], unique=True, schema='tenant')
    op.create_index(op.f('ix_tenant_users_id'), 'users', ['id'], unique=False, schema='tenant')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tenant_users_id'), table_name='users', schema='tenant')
    op.drop_index(op.f('ix_tenant_users_email'), table_name='users', schema='tenant')
    op.drop_table('users', schema='tenant')
    op.drop_table('user_verifications', schema='public')
    op.drop_table('audit_logs', schema='public')
    op.drop_index(op.f('ix_tenant_roles_name'), table_name='roles', schema='tenant')
    op.drop_index(op.f('ix_tenant_roles_id'), table_name='roles', schema='tenant')
    op.drop_table('roles', schema='tenant')
    op.drop_index(op.f('ix_public_tenants_name'), table_name='tenants', schema='public')
    op.drop_index(op.f('ix_public_tenants_id'), table_name='tenants', schema='public')
    op.drop_table('tenants', schema='public')
    op.drop_index(op.f('ix_public_admins_id'), table_name='admins', schema='public')
    op.drop_index(op.f('ix_public_admins_email'), table_name='admins', schema='public')
    op.drop_table('admins', schema='public')
    # ### end Alembic commands ###
